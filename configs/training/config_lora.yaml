# GPT-2 LoRA Fine-tuning Configuration

model:
  name: "gpt2"
  save_path: "models/"
  cache_dir: "models/cache/"
  
data:
  train_file: "data/train_data.json"
  eval_file: "data/eval_data.json"
  max_length: 256                
  train_test_split: 0.1
  
# LoRA Configuration
lora:
  r: 32                          # 8 did not work at all.
  lora_alpha: 64                 # 2x rank, typically.
  lora_dropout: 0.05             # Dataset is small, so keep dropout low
  target_modules: ["c_attn", "c_proj", "c_fc", "c_mlp"]
  bias: "lora_only"              
  modules_to_save: ["lm_head"]
  
# Training Configuration
training:
  output_dir: "outputs/"
  num_train_epochs: 15           # More epochs needed for this specific dataset
  per_device_train_batch_size: 4 # Smaller batch size for better gradient updates
  per_device_eval_batch_size: 4
  gradient_accumulation_steps: 4  # Increased to maintain effective batch size
  learning_rate: 0.0005          
  weight_decay: 0.005            
  warmup_steps: 50               
  logging_steps: 5               
  eval_steps: 25                 
  save_steps: 100
  save_total_limit: 5            
  eval_strategy: "steps"
  load_best_model_at_end: true
  metric_for_best_model: "eval_loss"
  greater_is_better: false
  dataloader_drop_last: false
  lr_scheduler_type: "cosine"    
  
# Device Configuration
device:
  use_mps: true  # Use Apple Silicon GPU if available
  use_cuda: false
  
# Generation Configuration
generation:
  max_new_tokens: 150
  temperature: 0.3
  do_sample: true
  top_p: 0.9
  top_k: 50
  repetition_penalty: 1.1
  
# Logging Configuration
logging:
  use_wandb: false
  project_name: "gpt2-lora-finetuning"
  run_name: "gpt2-lora-custom"
  log_level: "INFO"

# Advanced Training Settings
advanced:
  gradient_checkpointing: true   # Save memory with gradient checkpointing
  fp16: false                    # Use fp16 for faster training (disable for MPS)
  dataloader_num_workers: 0      # Number of workers for data loading
  remove_unused_columns: false   # Keep all columns for custom formatting
  prediction_loss_only: true     # Only compute loss for predictions
